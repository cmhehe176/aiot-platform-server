networks:
  iot-server-net: {}

volumes:
  iot-server-vol: {}

services:
  
  # iot-server:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   command: ['yarn', 'dev']
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #   networks:
  #     - iot-server-net
  #   ports:
  #     - 3000:${PORT}/tcp
  #   volumes:
  #     - .:/iot-server
  
  database:
    image: timescale/timescaledb:latest-pg15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h localhost"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 20s
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=
    restart: unless-stopped
    ports:
      - 5432:${POSTGRES_DB_PORT}
    networks:
      - iot-server-net
    volumes:
      - iot-server-vol:/var/lib/pgsql

  adminer:
    image: adminer
    healthcheck:
      interval: 5s
      retries: 5
      start_period: 20s
      test: ['CMD', 'wget', '--no-verbose', '--spider', 'http://localhost:8080']
      timeout: 5s
    environment:
      - ADMINER_DEFAULT_SERVER=database
      - ADMINER_PLUGINS=dump-json dump-zip edit-foreign json-column tables-filter tinymce
    restart: always
    networks:
      - iot-server-net
    ports:
      - 8080:8080/tcp