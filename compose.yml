networks:
  iot-server-net: {}

volumes:
  iot-server-vol: {}
  minio-vol: {}

services:
  iot-server:
    build:
      context: .
      dockerfile: Dockerfile
    command: ['yarn', 'dev']
    container_name: server
    depends_on:
      database:
        condition: service_healthy
    networks:
      - iot-server-net
    ports:
      - 3000:${PORT}/tcp
    volumes:
      - .:/iot-server

  database:
    image: timescale/timescaledb:latest-pg15
    container_name: postgres
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h localhost',
        ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 20s
    environment:
      - POSTGRES_USER=1234
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=iot_platform
    restart: unless-stopped
    ports:
      - 5432:5432
    networks:
      - iot-server-net
    volumes:
      - iot-server-vol:/var/lib/postgresql

  adminer:
    image: adminer
    container_name: adminer
    healthcheck:
      interval: 5s
      retries: 5
      start_period: 20s
      test: ['CMD', 'wget', '--no-verbose', '--spider', 'http://localhost:8080']
      timeout: 5s
    environment:
      - ADMINER_DEFAULT_SERVER=database
      - ADMINER_PLUGINS=dump-json dump-zip edit-foreign json-column tables-filter tinymce
    restart: always
    networks:
      - iot-server-net
    ports:
      - 8080:8080/tcp

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:latest
    container_name: zabbix-server
    restart: unless-stopped
    environment:
      - DB_SERVER_HOST=database
      - POSTGRES_DB=zabbix_db
      - POSTGRES_USER=1234
      - POSTGRES_PASSWORD=1234
    depends_on:
      - database
    ports:
      - 10051:10051
    volumes:
      - iot-server-vol:/var/lib/zbx_env/alertscripts:/usr/lib/zabbix/alertscripts
      - iot-server-vol:/var/lib/zbx_env/externalscripts:/usr/lib/zabbix/externalscripts
    networks:
      - iot-server-net

  # comment zabbix web and zabbix-agent if you only run zabbix server
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:latest
    container_name: zabbix-web
    restart: unless-stopped
    environment:
      - ZBX_SERVER_HOST=zabbix-server
      - DB_SERVER_HOST=database
      - POSTGRES_DB=zabbix_db
      - POSTGRES_USER=1234
      - POSTGRES_PASSWORD=1234
    depends_on:
      - zabbix-server
    ports:
      - 8081:8080/tcp
    volumes:
      - iot-server-vol:/var/lib/zbx_env/zabbix-web:/etc/ssl/nginx
    networks:
      - iot-server-net

  zabbix-agent:
    image: zabbix/zabbix-agent:latest
    container_name: zabbix-agent
    environment:
      - ZBX_SERVER_HOST=zabbix-server
    depends_on:
      - zabbix-server
    ports:
      - 10050:10050
    volumes:
      - iot-server-vol:/var/lib/zbx_env/agent-logs:/var/log/zabbix
    networks:
      - iot-server-net

  # comment this container if you are HWer
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - MINIO_REGION_NAME=ap-northeast-1
    ports:
      - 9000:9000
      - 9001:9001
    restart: unless-stopped
    volumes:
      - minio-vol:/data

  rabbitmq:
    image: rabbitmq:management
    #image: rabbitmq:latest   #rabbitMq server - if only want use rabbitMq server
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672/tcp # port for rabbitMq management
    # environment:
    #   - RABBITMQ_DEFAULT_USER=1234
    #   - RABBITMQ_DEFAULT_PASS=1234
    volumes:
      - iot-server-vol:/var/lib/rabbitmq/mnesia
    networks:
      - iot-server-net
