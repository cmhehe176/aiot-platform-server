name: Deploy

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy'
        required: true
        default: 'true'
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deploy == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > cloud.pem
          chmod 600 cloud.pem

      - name: Pull Docker Image
        run: |
          ssh -o StrictHostKeyChecking=no -i cloud.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin &&
            
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_NAME }}:latest
          '

      - name: Rebuild Container
        run: |
          ssh -o StrictHostKeyChecking=no -i cloud.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
            sudo docker stop ${{ secrets.SERVER_NAME }} || true &&
            sudo docker rm ${{ secrets.SERVER_NAME }} || true &&
            sudo docker run -d --restart unless-stopped --name ${{ secrets.SERVER_NAME }} --network network -p 3000:3000 --env-file aiot_server/.env  ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.SERVER_NAME }}:latest
          '

      - name: Cleanup Storage
        run: |
          ssh -o StrictHostKeyChecking=no -i cloud.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
            sudo docker system prune -a -f &&
            sudo sh -c "sync; echo 3 > /proc/sys/vm/drop_caches"
          '
